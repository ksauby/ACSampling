% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/randomizeClusters.R
\name{randomizeClusters}
\alias{randomizeClusters}
\title{Randomly place networks within a grid population.}
\usage{
randomizeClusters(
  grid,
  n.networks,
  seed,
  cluster.info,
  x = x,
  y = y,
  Rel_x = Rel_x,
  Rel_y = Rel_y
)
}
\arguments{
\item{grid}{A dataframe of x and y coordinates (can be created with \code{createPop}). Should only include plots that have the species of interest.}

\item{n.networks}{Number of networks to sample from the population of networks.}

\item{seed}{Vector of numbers to be given to \code{set.seed()}. Two numbers are used: the first to determine the sample of locations and the second to determine the sample of species information to be assigned to the sample locations.}

\item{cluster.info}{Dataframe of all network units. The dataframe should, at a mininum, include fields with information about the species used to initiate ACS, a PlotID field, a NetworkID field, and x and y coordinates.}

\item{x}{X coodinate. Default is "x."}

\item{y}{Y Coordinate. Default is "y."}

\item{Rel_x}{The distance of a plot from the center of the network to which it belongs on the x axis}

\item{Rel_y}{The distance of a plot from the center of the network to which it belongs on the y axis}
}
\description{
Formerly called createSpeciesPatch. This function creates patches of the species of interest within the grid of locations created with \code{createPop}. First, it randomly determines the locations of network centers and randomly assigns species information to those locations (\code{sampleGridPop}), randomly rotates thet network orientation to further randomize the real data, then adds the rest of the neighbor plots. Finally, it assigns each plot a Network ID (using \code{assignNetworkMembership}; it is important to include this function in case networks overlap and must be given a new network ID).

If species information is assigned twice to a given unit (as can happen in the case of overlapping, neighboring networks), the unit will be preferentially assigned the information where the species is present (if only one of the duplicate records has the species as present). If there are more than one records indicating the species is present, one of the duplicate records is randomly drawn and then assigned to the unit.

The function returns a list, the first object being the list of units occupied by the species within the population, and the second object being a vector of the remaining, unused seed numbers.

This function uses a maximum of \code{2 + n.networks} random numbers: the first to set the seed to sample locations from a grid, and the second to sample networks to assign to those locations (more specifically, the centers of the networks are assigned to those locations). Then a maximum of \code{n.networks} random numbers are used, each number to randomly rotate a network of units before it is assigned coordinates.
}
\examples{
library(magrittr)
library(dplyr)
library(ggplot2)
# realization info
x_start = 1
x_end = 30
y_start = 1
y_end = 30
buffer = 5
grid <- createPop(
	x_start + buffer, 
	x_end - buffer, 
	y_start + buffer, 
	y_end - buffer
)
n.networks = 3
seed = 2000:2100 # WHY DID I MAKE THIS MANY SEEDS?

data(Thompson1990Fig1Pop)
cluster.info = Thompson1990Fig1Pop \%>\% 
	dplyr::filter(m > 1) \%>\%
	createNetworks

Thompson1990_realization = randomizeClusters(grid, n.networks, seed, 
	cluster.info, x=x, y=y, Rel_x=Rel_x, Rel_y=Rel_y)

# plot realization
library(ggplot2)
p <- ggplot(Thompson1990_realization, aes(x, y, colour=NetworkID, 
	label=NetworkID))
p + annotate("rect", xmin=x_start, xmax=x_end, ymin=y_start, ymax=y_end, 
alpha=0, colour="grey") + 
 	geom_point(aes(size=factor(y_value))) + 
 	scale_colour_gradientn(colours = rainbow(7)) +
 	geom_text(aes(label=NetworkID), hjust=0, vjust=0)
}
\references{
Sauby, K.E and Christman, M.C. \emph{In preparation.} Restricted adaptive cluster sampling.
}
