% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/y_HT.R
\name{y_HT}
\alias{y_HT}
\title{Calculate the Horvitz-Thompson mean of an adaptive cluster sample.}
\usage{
y_HT(
  y,
  N,
  n1,
  pi_i_values = NULL,
  m_vec = NULL,
  sampling = NULL,
  criterion = NULL
)
}
\arguments{
\item{y}{The variable of interest, $y$. Must be a numeric vector. The criterion that determines whether adaptive cluster sampling takes place is based on this variable.}

\item{N}{Population size.}

\item{n1}{An integer giving the initial sample size (ie., the size of the initial simple random sample).}

\item{pi_i_values}{vector of inclusion probabilities, if not calculated using this function. Default is \code{NULL}.}

\item{m_vec}{Vector of values $m$ for the set of units in a sample, of length $n1$. Each $m$ value within the vector \code{m_vec} denotes the number of units satisfying the ACS criterion for the network $i$ to which the unit belongs.}

\item{sampling}{A vector (\code{character} format) describing whether units were included in the initial sample or subsequent ACS sample. Units selected in the initial sample should be given the value "Initial_Sample" in the \code{sampling} vector.}

\item{criterion}{Numeric threshold value of the variable of interest $y$ (whose name in the dataframe $popdata$ is supplied via the \code{yvar} argument) that initiates ACS. Defaults to 0 (ie., anything greater than 0 initiates adaptive cluster sampling).}
}
\value{
The Horvitz-Thompson mean.
}
\description{
This calculate the Horvitz-Thompson mean of an adaptive cluster sample done by sampling without replacement.

where $v$ is the number of distinct units in the sample and
$J_k$ is an indicator variable, equalling 0 if the $k$ th unit in the sample does not satisfy the condition and was not selected in the initial sample; otherwise, $J_k = 1$.
}
\examples{
library(magrittr)
library(plyr)
library(dplyr)
library(ggplot2)

# EXAMPLE 1: Sampling of population from Figure 1, Thompson (1990)

data(Thompson1990Fig1Pop)
data(Thompson1990Figure1Sample)

# plot sample overlaid onto population
ggplot() +
	geom_point(data=Thompson1990Fig1Pop, aes(x,y, size=factor(y_value),
		shape=factor(y_value))) +
	scale_shape_manual(values=c(1, rep(16, length(2:13)))) +
	geom_point(data=Thompson1990Figure1Sample, aes(x,y), shape=0, size=7)

Z <- createACS(popdata=Thompson1990Fig1Pop, 
n1=dim(Thompson1990Figure1Sample)[1], yvar="y_value", 
initsample=Thompson1990Figure1Sample)
# CALCULATE y_HT
y_HT(
	N = dim(Thompson1990Fig1Pop)[1], 
	n1 = dim(Thompson1990Figure1Sample)[1],
	m_vec = Z$m, 
	y = Z$y_value, 
	sampling = Z$Sampling,
	criterion=0
) 

# EXAMPLE 2: Table 1 from Thompson (1990)
data(Thompson1990Table1data)
(Thompson1990Table1 = Thompson1990Table1data \%>\%
group_by(sampling_effort) \%>\%
summarise(
	`y (added through SRSWOR)` = toString(y_value[which(sampling=="SRSWOR")]),
	`y (added through ACS)` = toString(y_value[which(sampling=="ACS")]),
	y_bar_1 = mean(y_value[which(sampling=="SRSWOR")]),
	y_HT = round(y_HT(N=dim(Thompson1990Fig1Pop)[1], n1, m, y_value, sampling, 5), 2),
	y_bar = round(mean(y_value),2)
	)
)

# EXAMPLE 3: 
# data(cactus_realizations)
# realization = cactus_realizations \%>\% filter(n.networks==40)
}
\references{
@template Thompson1990
}
